convertor.return.entity = pers.lee.common.rpc.ci.convertor.HibernateUtils.convertEntity(java.lang.Object)

rpc.[/management.ci].getEntities = spring.managementService.getEntities()
rpc.[/management.ci].get = spring.managementService.get(java.lang.String, java.util.Map):entity
rpc.[/management.ci].put = spring.managementService.put(java.lang.String, java.util.Map)
rpc.[/management.ci].batchGet = spring.managementService.batchGet(java.lang.String, java.util.List)
rpc.[/management.ci].batchPut = spring.managementService.batchPut(java.lang.String, java.util.List)
rpc.[/management.ci].delete = spring.managementService.delete(java.lang.String, java.util.Map)
rpc.[/management.ci].batchDelete = spring.managementService.batchDelete(java.lang.String, java.util.List)

convertor.parameter.constraint = pers.lee.common.rpc.ci.query.impl.ConstraintFactory.getConstraint(java.util.Map)

rpc.[/query.ci].getEntities = spring.queryService.getEntities()
rpc.[/query.ci].query = spring.queryService.query(java.lang.String, \
  pers.lee.common.rpc.ci.query.Constraint:constraint, pers.lee.common.rpc.ci.query.ResultDescriptor)
rpc.[/query.ci].group = spring.queryService.group(java.lang.String, \
  pers.lee.common.rpc.ci.query.Constraint:constraint, pers.lee.common.rpc.ci.query.GroupDescriptor)
rpc.[/query.ci].delete = spring.queryService.delete(java.lang.String, pers.lee.common.rpc.ci.query.Constraint:constraint)