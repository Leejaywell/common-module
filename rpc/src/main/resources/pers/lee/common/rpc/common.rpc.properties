rpc.[/configuration.ci].get = pers.lee.common.rpc.ci.config.ConfigService.get().getProperty(java.lang.String)
rpc.[/configuration.ci].getAll = pers.lee.common.rpc.ci.config.ConfigService.get().getAll()
rpc.[/configuration.ci].update = pers.lee.common.rpc.ci.config.ConfigService.get().setProperty(java.lang.String, java.lang.String)
rpc.[/configuration.ci].batchUpdate = pers.lee.common.rpc.ci.config.ConfigService.get().setProperties(java.util.Map)

rpc.[/status.ci].keys = pers.lee.common.rpc.ci.status.StatusCenter.get().keys()
rpc.[/status.ci].status = pers.lee.common.rpc.ci.status.StatusCenter.get().status()
rpc.[/status.ci].statusWith = pers.lee.common.rpc.ci.status.StatusCenter.get().statusWith(java.util.Set)
rpc.[/status.ci].statusWithout = pers.lee.common.rpc.ci.status.StatusCenter.get().statusWithout(java.util.Set)

rpc.[/log.ci].listLogs = pers.lee.common.rpc.ci.log.LogServiceFactory.get().listLogs()
rpc.[/log.ci].tail = pers.lee.common.rpc.ci.log.LogServiceFactory.get().tail(java.lang.String, java.lang.Integer)
rpc.[/log.ci].lines = pers.lee.common.rpc.ci.log.LogServiceFactory.get().lines(java.lang.String)
rpc.[/log.ci].isAppend = pers.lee.common.rpc.ci.log.LogServiceFactory.get().isAppend(java.lang.String, java.lang.Integer)
rpc.[/log.ci].next = pers.lee.common.rpc.ci.log.LogServiceFactory.get().next(java.lang.String, java.lang.Integer, java.lang.Integer)
rpc.[/log.ci].find = pers.lee.common.rpc.ci.log.LogServiceFactory.get().find(java.lang.String, java.lang.String, java.lang.Integer)
rpc.[/log.ci].findLines = pers.lee.common.rpc.ci.log.LogServiceFactory.get().findLines(java.lang.String, java.lang.String)
rpc.[/log.ci].findNext = pers.lee.common.rpc.ci.log.LogServiceFactory.get().findNext(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)
rpc.[/log.ci].deepFindLines = pers.lee.common.rpc.ci.log.LogServiceFactory.get().findLines(java.lang.String, java.util.List)
rpc.[/log.ci].deepFindNext = pers.lee.common.rpc.ci.log.LogServiceFactory.get().findNext(java.lang.String, java.util.List, java.lang.Integer, java.lang.Integer)

rpc.[/log.ci].listDirectories = pers.lee.common.rpc.ci.log.LogServiceFactory.getFileService().listDirectories(java.lang.String)
rpc.[/log.ci].listFiles = pers.lee.common.rpc.ci.log.LogServiceFactory.getFileService().listFiles(java.lang.String)

rpc.[/detect.ci].detect = pers.lee.common.rpc.ci.detect.DetectorManager.get().detect()
rpc.[/detect.ci].detectOnly = pers.lee.common.rpc.ci.detect.DetectorManager.get().detectOnly(java.util.Set)